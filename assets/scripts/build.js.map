{"version":3,"sources":["main.js","tablesaw-init.js","tablesaw.jquery.js"],"names":["$","ready","click","href","this","attr","tab","jQuery","win","shoestring","Error","document","addEventListener","trigger","window","undefined","_typeof","Symbol","iterator","obj","constructor","prototype","factory","define","amd","module","exports","root","require","Tablesaw","i18n","modes","columns","columnBtnText","columnsDialogError","sort","mustard","blackberry","WebKitPoint","operamini","documentElement","addClass","pluginName","classes","toolbar","events","create","destroy","refresh","resize","defaultMode","initSelector","initFilterSelector","defaultConfig","getHeaderCells","$thead","children","filter","eq","find","Table","element","table","$table","$tbody","mode","init","Math","round","random","createToolbar","_initCells","getConfig","pluginSpecificConfig","configs","extend","TablesawConfig","_getPrimaryHeaderCells","call","_findHeadersForCell","cell","$headers","results","rowNumber","headerMapping","length","colNumber","push","getRows","self","closest","is","getBodyRows","$rows","columnLookup","each","coltally","$t","colspan","parseInt","getAttribute","rowspan","k","j","rowCell","headerCol","cells","headerCell","$toolbar","prev","insertBefore","className","replace","tableId","off","removeData","fn","data","$doc","on","e","target","scrollTimeout","isScrolling","clearTimeout","setTimeout","resizeTimeout","stackTable","cellLabels","cellContentLabels","key","attrs","labelless","hideempty","Stack","tablesaw","html","$newHeader","createElement","$cell","index","$header","cloneNode","$sortableButton","remove","$checkall","append","createTextNode","childNodes","wrapInner","$label","replaceWith","prepend","removeClass","methods","_create","_init","oEl","sel","getElementsByTagName","_select","update","el","opts","label","found","setAttribute","innerHTML","opt","selected","text","i","l","nodeName","toUpperCase","replaceChild","firstChild","arrg","a","b","c","ColumnToggle","attributes","subrow","columnToggleTable","columnBtnContain","columnBtn","popup","priorityPrefix","headers","closePopup","event","$menuButton","$btnContain","openPopup","closeTimeout","id","$popup","$menu","hasNonPersistentHeaders","not","$this","priority","$cells","$getCells","appendTo","first","updateSubrows","checked","header","getHeaderFromCheckbox","preventDefault","refreshToggle","showing","$td","th","add","parent","checkbox","css","refreshPriority","getSortValue","$el","val","join","sortableSwitchSelector","defaultCol","numericCol","subRow","head","ascend","descend","switcher","tableToolbar","sortButton","o","heads","$switcher","addClassToHeads","h","v","makeHeadsActionable","col","clearOthers","sibs","removeAttr","headsOnAction","stopPropagation","newSortValue","siblings","handleDefault","idx","addSwitcher","isDefaultCol","isDescending","hasNumericAttribute","numericCount","numericCountMax","slice","isNaN","isNumeric","$firstChild","tablesawbtn","split","get","sortRows","rows","colNum","ascending","sorted","convertCells","cellArr","row","parentNode","next","getSortFxn","forceNumeric","regex","parseFloat","toLowerCase","convertCellsToRows","newRows","customFn","makeColDefault","sortBy","sortedRows","tbl","map","returnVal","args","Array","arguments","apply","createSwipeTable","showColumn","hideColumn","persistColumn","isPersistent","unmaintainWidths","persistWidths","maintainWidths","newHash","prefix","styles","tableWidth","width","hash","$headerCells","offsetWidth","$style","$head","getNext","checkFound","$headerCellsNoPersist","isHidden","getPrev","nextpair","fwd","canAdvance","pair","matchesMedia","matchMedia","matches","fakeBreakpoints","containerWidth","persist","sum","sums","visibleNonPersistantCount","isPersist","headerWidths","needsNonPersistentColumn","advance","getCoord","touches","originalEvent","$btns","$prevBtn","$nextBtn","disableTouchEvents","x","y","originX","originY","scrollTop","pageYOffset","cfg","swipeHorizontalThreshold","swipeVerticalThreshold","verticalThreshold","swipe","horizontalThreshold","isPageScrolled","abs","isVerticalSwipe","canGoPrev","canGoNext","hideBtn","allColumnsVisible","createMiniMap","showMinimap","mq","MiniMap","showHideNav","dots","$dotNav","hideDot","S","selectors","excludeMode","main","isSelected","ignoreMode","modeVal","dataMode","$otherToolbarItems","onModeChange","CheckAll","checkboxAllSelector","checkboxSelector","$checkbox","addEvents","setChecked","$th","checkedCount","allSelected","indeterminate"],"mappings":"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","file":"build.js","sourcesContent":["'use strict';\n\n(function ($) {\n\n  $('document').ready(function () {\n\n    $('.next-tab').click(function () {\n      var href = $(this).attr('href');\n      $('.nav-tabs a[href=\"' + href + '\"]').tab('show');\n    });\n  });\n})(jQuery);","'use strict';\n\n/*! Tablesaw - v3.0.1-beta.4 - 2017-03-06\n* https://github.com/filamentgroup/tablesaw\n* Copyright (c) 2017 Filament Group; Licensed MIT */\n(function (win) {\n\t\"use strict\";\n\n\tvar $;\n\tif ('shoestring' in win) {\n\t\t$ = win.shoestring;\n\t} else if ('jQuery' in win) {\n\t\t$ = win.jQuery;\n\t} else {\n\t\tthrow new Error(\"tablesaw: DOM library not found.\");\n\t}\n\n\t// DOM-ready auto-init of plugins.\n\t// Many plugins bind to an \"enhance\" event to init themselves on dom ready, or when new markup is inserted into the DOM\n\t// Use raw DOMContentLoaded instead of shoestring (may have issues in Android 2.3, exhibited by stack table)\n\tif (\"addEventListener\" in document) {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function () {\n\t\t\t$(document).trigger(\"enhance.tablesaw\");\n\t\t});\n\t}\n})(typeof window !== \"undefined\" ? window : undefined);","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*! Tablesaw - v3.0.1-beta.4 - 2017-03-06\n* https://github.com/filamentgroup/tablesaw\n* Copyright (c) 2017 Filament Group; Licensed MIT */\n// UMD module definition\n// From: https://github.com/umdjs/umd/blob/master/templates/jqueryPlugin.js\n\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine(['jquery'], factory);\n\t} else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n\t\t// Node/CommonJS\n\t\tmodule.exports = function (root, jQuery) {\n\t\t\tif (jQuery === undefined) {\n\t\t\t\t// require('jQuery') returns a factory that requires window to\n\t\t\t\t// build a jQuery instance, we normalize how we use modules\n\t\t\t\t// that require this pattern but the window provided is a noop\n\t\t\t\t// if it's defined (how jquery works)\n\t\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t\tjQuery = require('jquery');\n\t\t\t\t} else {\n\t\t\t\t\tjQuery = require('jquery')(root);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfactory(jQuery);\n\t\t\treturn jQuery;\n\t\t};\n\t} else {\n\t\t// Browser globals\n\t\tfactory(jQuery);\n\t}\n})(function ($) {\n\t\"use strict\";\n\n\tvar win = typeof window !== \"undefined\" ? window : this;\n\n\tvar Tablesaw = {\n\t\ti18n: {\n\t\t\tmodes: ['Stack', 'Swipe', 'Toggle'],\n\t\t\tcolumns: 'Col<span class=\\\"a11y-sm\\\">umn</span>s',\n\t\t\tcolumnBtnText: 'Columns',\n\t\t\tcolumnsDialogError: 'No eligible columns.',\n\t\t\tsort: 'Sort'\n\t\t},\n\t\t// cut the mustard\n\t\tmustard: 'head' in document && ( // IE9+, Firefox 4+, Safari 5.1+, Mobile Safari 4.1+, Opera 11.5+, Android 2.3+\n\t\t!window.blackberry || window.WebKitPoint) && // only WebKit Blackberry (OS 6+)\n\t\t!window.operamini\n\t};\n\n\tif (Tablesaw.mustard) {\n\t\t$(document.documentElement).addClass('tablesaw-enhanced');\n\t}\n\n\t(function () {\n\t\tvar pluginName = \"tablesaw\";\n\t\tvar classes = {\n\t\t\ttoolbar: \"tablesaw-bar\"\n\t\t};\n\t\tvar events = {\n\t\t\tcreate: \"tablesawcreate\",\n\t\t\tdestroy: \"tablesawdestroy\",\n\t\t\trefresh: \"tablesawrefresh\",\n\t\t\tresize: \"tablesawresize\"\n\t\t};\n\t\tvar defaultMode = \"stack\";\n\t\tvar initSelector = \"table\";\n\t\tvar initFilterSelector = \"[data-tablesaw],[data-tablesaw-mode],[data-tablesaw-sortable]\";\n\t\tvar defaultConfig = {\n\t\t\tgetHeaderCells: function getHeaderCells() {\n\t\t\t\treturn this.$thead.children().filter(\"tr\").eq(0).find(\"th\");\n\t\t\t}\n\t\t};\n\n\t\tTablesaw.events = events;\n\n\t\tvar Table = function Table(element) {\n\t\t\tif (!element) {\n\t\t\t\tthrow new Error(\"Tablesaw requires an element.\");\n\t\t\t}\n\n\t\t\tthis.table = element;\n\t\t\tthis.$table = $(element);\n\t\t\tthis.$thead = this.$table.children().filter(\"thead\");\n\t\t\tthis.$tbody = this.$table.children().filter(\"tbody\");\n\n\t\t\tthis.mode = this.$table.attr(\"data-tablesaw-mode\") || defaultMode;\n\n\t\t\tthis.init();\n\t\t};\n\n\t\tTable.prototype.init = function () {\n\t\t\t// assign an id if there is none\n\t\t\tif (!this.$table.attr(\"id\")) {\n\t\t\t\tthis.$table.attr(\"id\", pluginName + \"-\" + Math.round(Math.random() * 10000));\n\t\t\t}\n\n\t\t\tthis.createToolbar();\n\n\t\t\t// TODO this is used inside stack table init for some reason? what does it do?\n\t\t\tthis._initCells();\n\n\t\t\tthis.$table.trigger(events.create, [this]);\n\t\t};\n\n\t\tTable.prototype.getConfig = function (pluginSpecificConfig) {\n\t\t\t// shoestring extend doesn’t support arbitrary args\n\t\t\tvar configs = $.extend(defaultConfig, pluginSpecificConfig || {});\n\t\t\treturn $.extend(configs, typeof TablesawConfig !== \"undefined\" ? TablesawConfig : {});\n\t\t};\n\n\t\tTable.prototype._getPrimaryHeaderCells = function () {\n\t\t\treturn this.getConfig().getHeaderCells.call(this);\n\t\t};\n\n\t\tTable.prototype._findHeadersForCell = function (cell) {\n\t\t\tvar $headers = this._getPrimaryHeaderCells();\n\t\t\tvar results = [];\n\n\t\t\tfor (var rowNumber = 1; rowNumber < this.headerMapping.length; rowNumber++) {\n\t\t\t\tfor (var colNumber = 0; colNumber < this.headerMapping[rowNumber].length; colNumber++) {\n\t\t\t\t\tif (this.headerMapping[rowNumber][colNumber] === cell) {\n\t\t\t\t\t\tresults.push($headers[colNumber]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tTable.prototype.getRows = function () {\n\t\t\tvar self = this;\n\t\t\treturn this.$table.find(\"tr\").filter(function () {\n\t\t\t\treturn $(this).closest(\"table\").is(self.$table);\n\t\t\t});\n\t\t};\n\n\t\tTable.prototype.getBodyRows = function () {\n\t\t\treturn this.$tbody.children().filter(\"tr\");\n\t\t};\n\n\t\tTable.prototype._initCells = function () {\n\t\t\tvar $rows = this.getRows();\n\t\t\tvar columnLookup = [];\n\n\t\t\t$rows.each(function (rowNumber) {\n\t\t\t\tcolumnLookup[rowNumber] = [];\n\t\t\t});\n\n\t\t\t$rows.each(function (rowNumber) {\n\t\t\t\tvar coltally = 0;\n\t\t\t\tvar $t = $(this);\n\t\t\t\tvar children = $t.children();\n\n\t\t\t\tchildren.each(function () {\n\t\t\t\t\tvar colspan = parseInt(this.getAttribute(\"colspan\"), 10);\n\t\t\t\t\tvar rowspan = parseInt(this.getAttribute(\"rowspan\"), 10);\n\n\t\t\t\t\t// set in a previous rowspan\n\t\t\t\t\twhile (columnLookup[rowNumber][coltally]) {\n\t\t\t\t\t\tcoltally++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnLookup[rowNumber][coltally] = this;\n\n\t\t\t\t\t// TODO both colspan and rowspan\n\t\t\t\t\tif (colspan) {\n\t\t\t\t\t\tfor (var k = 0; k < colspan - 1; k++) {\n\t\t\t\t\t\t\tcoltally++;\n\t\t\t\t\t\t\tcolumnLookup[rowNumber][coltally] = this;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (rowspan) {\n\t\t\t\t\t\tfor (var j = 1; j < rowspan; j++) {\n\t\t\t\t\t\t\tcolumnLookup[rowNumber + j][coltally] = this;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcoltally++;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfor (var colNumber = 0; colNumber < columnLookup[0].length; colNumber++) {\n\t\t\t\tvar headerCol = columnLookup[0][colNumber];\n\t\t\t\tvar rowNumber = 0;\n\t\t\t\tvar rowCell;\n\n\t\t\t\tif (!headerCol.cells) {\n\t\t\t\t\theaderCol.cells = [];\n\t\t\t\t}\n\n\t\t\t\twhile (rowNumber < columnLookup.length) {\n\t\t\t\t\trowCell = columnLookup[rowNumber][colNumber];\n\n\t\t\t\t\tif (headerCol !== rowCell) {\n\t\t\t\t\t\theaderCol.cells.push(rowCell);\n\t\t\t\t\t\trowCell.headerCell = headerCol;\n\t\t\t\t\t}\n\n\t\t\t\t\trowNumber++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.headerMapping = columnLookup;\n\t\t};\n\n\t\tTable.prototype.refresh = function () {\n\t\t\tthis._initCells();\n\n\t\t\tthis.$table.trigger(events.refresh, [this]);\n\t\t};\n\n\t\tTable.prototype.createToolbar = function () {\n\t\t\t// Insert the toolbar\n\t\t\t// TODO move this into a separate component\n\t\t\tvar $toolbar = this.$table.prev().filter('.' + classes.toolbar);\n\t\t\tif (!$toolbar.length) {\n\t\t\t\t$toolbar = $('<div>').addClass(classes.toolbar).insertBefore(this.$table);\n\t\t\t}\n\t\t\tthis.$toolbar = $toolbar;\n\n\t\t\tif (this.mode) {\n\t\t\t\tthis.$toolbar.addClass('tablesaw-mode-' + this.mode);\n\t\t\t}\n\t\t};\n\n\t\tTable.prototype.destroy = function () {\n\t\t\t// Don’t remove the toolbar. Some of the table features are not yet destroy-friendly.\n\t\t\tthis.$table.prev().filter('.' + classes.toolbar).each(function () {\n\t\t\t\tthis.className = this.className.replace(/\\btablesaw-mode\\-\\w*\\b/gi, '');\n\t\t\t});\n\n\t\t\tvar tableId = this.$table.attr('id');\n\t\t\t$(document).off(\".\" + tableId);\n\t\t\t$(window).off(\".\" + tableId);\n\n\t\t\t// other plugins\n\t\t\tthis.$table.trigger(events.destroy, [this]);\n\n\t\t\tthis.$table.removeData(pluginName);\n\t\t};\n\n\t\t// Collection method.\n\t\t$.fn[pluginName] = function () {\n\t\t\treturn this.each(function () {\n\t\t\t\tvar $t = $(this);\n\n\t\t\t\tif ($t.data(pluginName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar table = new Table(this);\n\t\t\t\t$t.data(pluginName, table);\n\t\t\t});\n\t\t};\n\n\t\tvar $doc = $(win.document);\n\t\t$doc.on(\"enhance.tablesaw\", function (e) {\n\t\t\t// Cut the mustard\n\t\t\tif (Tablesaw.mustard) {\n\t\t\t\t$(e.target).find(initSelector).filter(initFilterSelector)[pluginName]();\n\t\t\t}\n\t\t});\n\n\t\t// Avoid a resize during scroll:\n\t\t// Some Mobile devices trigger a resize during scroll (sometimes when\n\t\t// doing elastic stretch at the end of the document or from the \n\t\t// location bar hide)\n\t\tvar isScrolling = false;\n\t\tvar scrollTimeout;\n\t\t$doc.on(\"scroll.tablesaw\", function () {\n\t\t\tisScrolling = true;\n\n\t\t\twin.clearTimeout(scrollTimeout);\n\t\t\tscrollTimeout = win.setTimeout(function () {\n\t\t\t\tisScrolling = false;\n\t\t\t}, 300); // must be greater than the resize timeout below\n\t\t});\n\n\t\tvar resizeTimeout;\n\t\t$(win).on(\"resize\", function () {\n\t\t\tif (!isScrolling) {\n\t\t\t\twin.clearTimeout(resizeTimeout);\n\t\t\t\tresizeTimeout = win.setTimeout(function () {\n\t\t\t\t\t$doc.trigger(events.resize);\n\t\t\t\t}, 150); // must be less than the scrolling timeout above.\n\t\t\t}\n\t\t});\n\t})();\n\n\t(function () {\n\n\t\tvar classes = {\n\t\t\tstackTable: 'tablesaw-stack',\n\t\t\tcellLabels: 'tablesaw-cell-label',\n\t\t\tcellContentLabels: 'tablesaw-cell-content'\n\t\t};\n\n\t\tvar data = {\n\t\t\tkey: 'tablesaw-stack'\n\t\t};\n\n\t\tvar attrs = {\n\t\t\tlabelless: 'data-tablesaw-no-labels',\n\t\t\thideempty: 'data-tablesaw-hide-empty'\n\t\t};\n\n\t\tvar Stack = function Stack(element, tablesaw) {\n\n\t\t\tthis.tablesaw = tablesaw;\n\t\t\tthis.$table = $(element);\n\n\t\t\tthis.labelless = this.$table.is('[' + attrs.labelless + ']');\n\t\t\tthis.hideempty = this.$table.is('[' + attrs.hideempty + ']');\n\n\t\t\tthis.$table.data(data.key, this);\n\t\t};\n\n\t\tStack.prototype.init = function () {\n\t\t\tthis.$table.addClass(classes.stackTable);\n\n\t\t\tif (this.labelless) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar self = this;\n\n\t\t\tthis.$table.find(\"th, td\").filter(function () {\n\t\t\t\treturn !$(this).closest(\"thead\").length;\n\t\t\t}).filter(function () {\n\t\t\t\treturn !$(this).closest(\"tr\").is(\"[\" + attrs.labelless + \"]\") && (!self.hideempty || !!$(this).html());\n\t\t\t}).each(function () {\n\t\t\t\tvar $newHeader = $(document.createElement(\"b\")).addClass(classes.cellLabels);\n\t\t\t\tvar $cell = $(this);\n\n\t\t\t\t// headers\n\t\t\t\t$(self.tablesaw._findHeadersForCell(this)).each(function (index) {\n\t\t\t\t\tvar $header = $(this.cloneNode(true));\n\t\t\t\t\t// TODO decouple from sortable better\n\t\t\t\t\t// Changed from .text() in https://github.com/filamentgroup/tablesaw/commit/b9c12a8f893ec192830ec3ba2d75f062642f935b\n\t\t\t\t\t// to preserve structural html in headers, like <a>\n\t\t\t\t\tvar $sortableButton = $header.find(\".tablesaw-sortable-btn\");\n\t\t\t\t\t$header.find(\".tablesaw-sortable-arrow\").remove();\n\n\t\t\t\t\t// TODO decouple from checkall better\n\t\t\t\t\tvar $checkall = $header.find(\"[data-tablesaw-checkall]\");\n\t\t\t\t\t$checkall.closest(\"label\").remove();\n\t\t\t\t\tif ($checkall.length) {\n\t\t\t\t\t\t$newHeader = $([]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t$newHeader.append(document.createTextNode(\", \"));\n\t\t\t\t\t}\n\t\t\t\t\t$newHeader.append($sortableButton.length ? $sortableButton[0].childNodes : $header[0].childNodes);\n\t\t\t\t});\n\n\t\t\t\tif ($newHeader.length && !$cell.find(\".\" + classes.cellContentLabels).length) {\n\t\t\t\t\t$cell.wrapInner(\"<span class='\" + classes.cellContentLabels + \"'></span>\");\n\t\t\t\t}\n\n\t\t\t\t// Update if already exists.\n\t\t\t\tvar $label = $cell.find(\".\" + classes.cellLabels);\n\t\t\t\tif (!$label.length) {\n\t\t\t\t\t$cell.prepend($newHeader);\n\t\t\t\t} else {\n\t\t\t\t\t// only if changed\n\t\t\t\t\t$label.replaceWith($newHeader);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tStack.prototype.destroy = function () {\n\t\t\tthis.$table.removeClass(classes.stackTable);\n\t\t\tthis.$table.find('.' + classes.cellLabels).remove();\n\t\t\tthis.$table.find('.' + classes.cellContentLabels).each(function () {\n\t\t\t\t$(this).replaceWith(this.childNodes);\n\t\t\t});\n\t\t};\n\n\t\t// on tablecreate, init\n\t\t$(document).on(Tablesaw.events.create, function (e, tablesaw) {\n\t\t\tif (tablesaw.mode === 'stack') {\n\t\t\t\tvar table = new Stack(tablesaw.table, tablesaw);\n\t\t\t\ttable.init();\n\t\t\t}\n\t\t}).on(Tablesaw.events.refresh, function (e, tablesaw) {\n\t\t\tif (tablesaw.mode === 'stack') {\n\t\t\t\t$(tablesaw.table).data(data.key).init();\n\t\t\t}\n\t\t}).on(Tablesaw.events.destroy, function (e, tablesaw) {\n\t\t\tif (tablesaw.mode === 'stack') {\n\t\t\t\t$(tablesaw.table).data(data.key).destroy();\n\t\t\t}\n\t\t});\n\t})();\n\t(function () {\n\t\tvar pluginName = \"tablesawbtn\",\n\t\t    methods = {\n\t\t\t_create: function _create() {\n\t\t\t\treturn $(this).each(function () {\n\t\t\t\t\t$(this).trigger(\"beforecreate.\" + pluginName)[pluginName](\"_init\").trigger(\"create.\" + pluginName);\n\t\t\t\t});\n\t\t\t},\n\t\t\t_init: function _init() {\n\t\t\t\tvar oEl = $(this),\n\t\t\t\t    sel = this.getElementsByTagName(\"select\")[0];\n\n\t\t\t\tif (sel) {\n\t\t\t\t\t$(this).addClass(\"btn-select\")[pluginName](\"_select\", sel);\n\t\t\t\t}\n\t\t\t\treturn oEl;\n\t\t\t},\n\t\t\t_select: function _select(sel) {\n\t\t\t\tvar update = function update(oEl, sel) {\n\t\t\t\t\tvar opts = $(sel).find(\"option\");\n\t\t\t\t\tvar label = document.createElement(\"span\");\n\t\t\t\t\tvar el;\n\t\t\t\t\tvar children;\n\t\t\t\t\tvar found = false;\n\n\t\t\t\t\tlabel.setAttribute(\"aria-hidden\", \"true\");\n\t\t\t\t\tlabel.innerHTML = \"&#160;\";\n\n\t\t\t\t\topts.each(function () {\n\t\t\t\t\t\tvar opt = this;\n\t\t\t\t\t\tif (opt.selected) {\n\t\t\t\t\t\t\tlabel.innerHTML = opt.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tchildren = oEl.childNodes;\n\t\t\t\t\tif (opts.length > 0) {\n\t\t\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\t\t\tel = children[i];\n\n\t\t\t\t\t\t\tif (el && el.nodeName.toUpperCase() === \"SPAN\") {\n\t\t\t\t\t\t\t\toEl.replaceChild(label, el);\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t\toEl.insertBefore(label, oEl.firstChild);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tupdate(this, sel);\n\t\t\t\t$(this).on(\"change refresh\", function () {\n\t\t\t\t\tupdate(this, sel);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Collection method.\n\t\t$.fn[pluginName] = function (arrg, a, b, c) {\n\t\t\treturn this.each(function () {\n\n\t\t\t\t// if it's a method\n\t\t\t\tif (arrg && typeof arrg === \"string\") {\n\t\t\t\t\treturn $.fn[pluginName].prototype[arrg].call(this, a, b, c);\n\t\t\t\t}\n\n\t\t\t\t// don't re-init\n\t\t\t\tif ($(this).data(pluginName + \"active\")) {\n\t\t\t\t\treturn $(this);\n\t\t\t\t}\n\n\t\t\t\t$(this).data(pluginName + \"active\", true);\n\n\t\t\t\t$.fn[pluginName].prototype._create.call(this);\n\t\t\t});\n\t\t};\n\n\t\t// add methods\n\t\t$.extend($.fn[pluginName].prototype, methods);\n\t})();\n\t(function () {\n\n\t\tvar data = {\n\t\t\tkey: \"tablesaw-coltoggle\"\n\t\t};\n\n\t\tvar ColumnToggle = function ColumnToggle(element) {\n\n\t\t\tthis.$table = $(element);\n\n\t\t\tif (!this.$table.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.attributes = {\n\t\t\t\tsubrow: \"data-tablesaw-subrow\"\n\t\t\t};\n\n\t\t\tthis.classes = {\n\t\t\t\tcolumnToggleTable: 'tablesaw-columntoggle',\n\t\t\t\tcolumnBtnContain: 'tablesaw-columntoggle-btnwrap tablesaw-advance',\n\t\t\t\tcolumnBtn: 'tablesaw-columntoggle-btn tablesaw-nav-btn down',\n\t\t\t\tpopup: 'tablesaw-columntoggle-popup',\n\t\t\t\tpriorityPrefix: 'tablesaw-priority-',\n\t\t\t\t// TODO duplicate class, also in tables.js\n\t\t\t\ttoolbar: 'tablesaw-bar'\n\t\t\t};\n\n\t\t\t// Expose headers and allHeaders properties on the widget\n\t\t\t// headers references the THs within the first TR in the table\n\t\t\t// TODO use tables.js getHeaderCells method\n\t\t\tthis.headers = this.$table.find(\"tr\").eq(0).find(\"th\");\n\n\t\t\tthis.$table.data(data.key, this);\n\t\t};\n\n\t\tColumnToggle.prototype.init = function () {\n\n\t\t\tif (!this.$table.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tableId,\n\t\t\t    id,\n\t\t\t    $menuButton,\n\t\t\t    $popup,\n\t\t\t    $menu,\n\t\t\t    $btnContain,\n\t\t\t    self = this;\n\n\t\t\tthis.$table.addClass(this.classes.columnToggleTable);\n\n\t\t\ttableId = this.$table.attr(\"id\");\n\t\t\tid = tableId + \"-popup\";\n\t\t\t$btnContain = $(\"<div class='\" + this.classes.columnBtnContain + \"'></div>\");\n\t\t\t$menuButton = $(\"<a href='#\" + id + \"' class='btn btn-micro \" + this.classes.columnBtn + \"' data-popup-link>\" + \"<span>\" + Tablesaw.i18n.columnBtnText + \"</span></a>\");\n\t\t\t$popup = $(\"<div class='dialog-table-coltoggle \" + this.classes.popup + \"' id='\" + id + \"'></div>\");\n\t\t\t$menu = $(\"<div class='btn-group'></div>\");\n\n\t\t\tvar hasNonPersistentHeaders = false;\n\t\t\t$(this.headers).not(\"td\").each(function () {\n\t\t\t\tvar $this = $(this),\n\t\t\t\t    priority = $this.attr(\"data-tablesaw-priority\"),\n\t\t\t\t    $cells = self.$getCells(this);\n\n\t\t\t\tif (priority && priority !== \"persist\") {\n\t\t\t\t\t$cells.addClass(self.classes.priorityPrefix + priority);\n\n\t\t\t\t\t$(\"<label><input type='checkbox' checked>\" + $this.text() + \"</label>\").appendTo($menu).children().first().data(\"tablesaw-header\", this);\n\n\t\t\t\t\thasNonPersistentHeaders = true;\n\n\t\t\t\t\tif (priority === \"0\") {\n\t\t\t\t\t\tself.updateSubrows(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!hasNonPersistentHeaders) {\n\t\t\t\t$menu.append('<label>' + Tablesaw.i18n.columnsDialogError + '</label>');\n\t\t\t}\n\n\t\t\t$menu.appendTo($popup);\n\n\t\t\t// bind change event listeners to inputs - TODO: move to a private method?\n\t\t\t$menu.find('input[type=\"checkbox\"]').on(\"change\", function (e) {\n\t\t\t\tvar checked = e.target.checked;\n\n\t\t\t\tvar header = self.getHeaderFromCheckbox(e.target);\n\t\t\t\tvar $cells = self.$getCells(header);\n\n\t\t\t\t$cells[!checked ? \"addClass\" : \"removeClass\"](\"tablesaw-cell-hidden\");\n\t\t\t\t$cells[checked ? \"addClass\" : \"removeClass\"](\"tablesaw-cell-visible\");\n\n\t\t\t\tself.updateSubrows(checked);\n\n\t\t\t\tself.$table.trigger('tablesawcolumns');\n\t\t\t});\n\n\t\t\t$menuButton.appendTo($btnContain);\n\t\t\t$btnContain.appendTo(this.$table.prev().filter('.' + this.classes.toolbar));\n\n\t\t\tfunction closePopup(event) {\n\t\t\t\t// Click came from inside the popup, ignore.\n\t\t\t\tif (event && $(event.target).closest(\".\" + self.classes.popup).length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$(document).off('click.' + tableId);\n\t\t\t\t$menuButton.removeClass('up').addClass('down');\n\t\t\t\t$btnContain.removeClass('visible');\n\t\t\t}\n\n\t\t\tvar closeTimeout;\n\t\t\tfunction openPopup() {\n\t\t\t\t$btnContain.addClass('visible');\n\t\t\t\t$menuButton.removeClass('down').addClass('up');\n\n\t\t\t\t$(document).off('click.' + tableId, closePopup);\n\n\t\t\t\twindow.clearTimeout(closeTimeout);\n\t\t\t\tcloseTimeout = window.setTimeout(function () {\n\t\t\t\t\t$(document).on('click.' + tableId, closePopup);\n\t\t\t\t}, 15);\n\t\t\t}\n\n\t\t\t$menuButton.on(\"click.tablesaw\", function (event) {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (!$btnContain.is(\".visible\")) {\n\t\t\t\t\topenPopup();\n\t\t\t\t} else {\n\t\t\t\t\tclosePopup();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$popup.appendTo($btnContain);\n\n\t\t\tthis.$menu = $menu;\n\n\t\t\t$(window).on(Tablesaw.events.resize + \".\" + tableId, function () {\n\t\t\t\tself.refreshToggle();\n\t\t\t});\n\n\t\t\tthis.refreshToggle();\n\t\t};\n\n\t\tColumnToggle.prototype.updateSubrows = function (showing) {\n\t\t\tthis.$table.find(\"[\" + this.attributes.subrow + \"]\").each(function () {\n\t\t\t\t// filter out subrows\n\t\t\t\tvar $td = $(this).find(\"td[colspan]\").eq(0);\n\t\t\t\t$td.attr(\"colspan\", parseInt($td.attr(\"colspan\"), 10) + (showing ? 1 : -1));\n\t\t\t});\n\t\t};\n\n\t\tColumnToggle.prototype.$getCells = function (th) {\n\t\t\tvar self = this;\n\t\t\treturn $(th).add(th.cells).filter(function () {\n\t\t\t\t// no subrows\n\t\t\t\treturn !$(this).parent().is(\"[\" + self.attributes.subrow + \"]\");\n\t\t\t});\n\t\t};\n\n\t\tColumnToggle.prototype.getHeaderFromCheckbox = function (checkbox) {\n\t\t\treturn $(checkbox).data(\"tablesaw-header\");\n\t\t};\n\n\t\tColumnToggle.prototype.refreshToggle = function () {\n\t\t\tvar self = this;\n\t\t\tthis.$menu.find(\"input\").each(function () {\n\t\t\t\tvar header = self.getHeaderFromCheckbox(this);\n\t\t\t\tthis.checked = self.$getCells(header).eq(0).css(\"display\") === \"table-cell\";\n\t\t\t});\n\t\t};\n\n\t\t// TODO code duplication with init\n\t\tColumnToggle.prototype.refreshPriority = function () {\n\t\t\tvar self = this;\n\t\t\t$(this.headers).each(function () {\n\t\t\t\tvar $this = $(this),\n\t\t\t\t    priority = $this.attr(\"data-tablesaw-priority\"),\n\t\t\t\t    $cells = self.$getCells(this);\n\n\t\t\t\tif (priority && priority !== \"persist\") {\n\t\t\t\t\t$cells.addClass(self.classes.priorityPrefix + priority);\n\n\t\t\t\t\tif (priority === \"0\") {\n\t\t\t\t\t\tself.updateSubrows(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tColumnToggle.prototype.destroy = function () {\n\t\t\tthis.$table.removeClass(this.classes.columnToggleTable);\n\t\t\tthis.$table.find('th, td').each(function () {\n\t\t\t\tvar $cell = $(this);\n\t\t\t\t$cell.removeClass('tablesaw-cell-hidden').removeClass('tablesaw-cell-visible');\n\n\t\t\t\tthis.className = this.className.replace(/\\bui\\-table\\-priority\\-\\d\\b/g, '');\n\t\t\t});\n\t\t};\n\n\t\t// on tablecreate, init\n\t\t$(document).on(Tablesaw.events.create, function (e, tablesaw) {\n\n\t\t\tif (tablesaw.mode === 'columntoggle') {\n\t\t\t\tvar table = new ColumnToggle(tablesaw.table);\n\t\t\t\ttable.init();\n\t\t\t}\n\t\t});\n\n\t\t$(document).on(Tablesaw.events.destroy, function (e, tablesaw) {\n\t\t\tif (tablesaw.mode === 'columntoggle') {\n\t\t\t\t$(tablesaw.table).data(data.key).destroy();\n\t\t\t}\n\t\t});\n\t})();\n\t;(function () {\n\t\tfunction getSortValue(cell) {\n\t\t\tvar text = [];\n\t\t\t$(cell.childNodes).each(function () {\n\t\t\t\tvar $el = $(this);\n\t\t\t\tif ($el.is('input, select')) {\n\t\t\t\t\ttext.push($el.val());\n\t\t\t\t} else if ($el.is('.tablesaw-cell-label')) {} else {\n\t\t\t\t\ttext.push(($el.text() || '').replace(/^\\s+|\\s+$/g, ''));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn text.join('');\n\t\t}\n\n\t\tvar pluginName = \"tablesaw-sortable\",\n\t\t    initSelector = \"table[data-\" + pluginName + \"]\",\n\t\t    sortableSwitchSelector = \"[data-\" + pluginName + \"-switch]\",\n\t\t    attrs = {\n\t\t\tdefaultCol: \"data-tablesaw-sortable-default-col\",\n\t\t\tnumericCol: \"data-tablesaw-sortable-numeric\",\n\t\t\tsubRow: \"data-tablesaw-subrow\"\n\t\t},\n\t\t    classes = {\n\t\t\thead: pluginName + \"-head\",\n\t\t\tascend: pluginName + \"-ascending\",\n\t\t\tdescend: pluginName + \"-descending\",\n\t\t\tswitcher: pluginName + \"-switch\",\n\t\t\ttableToolbar: 'tablesaw-toolbar',\n\t\t\tsortButton: pluginName + \"-btn\"\n\t\t},\n\t\t    methods = {\n\t\t\t_create: function _create(o) {\n\t\t\t\treturn $(this).each(function () {\n\t\t\t\t\tvar init = $(this).data(pluginName + \"-init\");\n\t\t\t\t\tif (init) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t$(this).data(pluginName + \"-init\", true).trigger(\"beforecreate.\" + pluginName)[pluginName](\"_init\", o).trigger(\"create.\" + pluginName);\n\t\t\t\t});\n\t\t\t},\n\t\t\t_init: function _init() {\n\t\t\t\tvar el = $(this),\n\t\t\t\t    heads,\n\t\t\t\t    $switcher;\n\n\t\t\t\tvar addClassToHeads = function addClassToHeads(h) {\n\t\t\t\t\t$.each(h, function (i, v) {\n\t\t\t\t\t\t$(v).addClass(classes.head);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t    makeHeadsActionable = function makeHeadsActionable(h, fn) {\n\t\t\t\t\t$.each(h, function (i, col) {\n\t\t\t\t\t\tvar b = $(\"<button class='\" + classes.sortButton + \"'/>\");\n\t\t\t\t\t\tb.on(\"click\", { col: col }, fn);\n\t\t\t\t\t\t$(col).wrapInner(b).find(\"button\").append(\"<span class='tablesaw-sortable-arrow'>\");\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t    clearOthers = function clearOthers(sibs) {\n\t\t\t\t\t$.each(sibs, function (i, v) {\n\t\t\t\t\t\tvar col = $(v);\n\t\t\t\t\t\tcol.removeAttr(attrs.defaultCol);\n\t\t\t\t\t\tcol.removeClass(classes.ascend);\n\t\t\t\t\t\tcol.removeClass(classes.descend);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t    headsOnAction = function headsOnAction(e) {\n\t\t\t\t\tif ($(e.target).is('a[href]')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tvar head = $(this).parent(),\n\t\t\t\t\t    v = e.data.col,\n\t\t\t\t\t    newSortValue = heads.index(head[0]);\n\n\t\t\t\t\tclearOthers(head.siblings());\n\t\t\t\t\tif (head.is(\".\" + classes.descend) || !head.is(\".\" + classes.ascend)) {\n\t\t\t\t\t\tel[pluginName](\"sortBy\", v, true);\n\t\t\t\t\t\tnewSortValue += '_asc';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel[pluginName](\"sortBy\", v);\n\t\t\t\t\t\tnewSortValue += '_desc';\n\t\t\t\t\t}\n\t\t\t\t\tif ($switcher) {\n\t\t\t\t\t\t$switcher.find('select').val(newSortValue).trigger('refresh');\n\t\t\t\t\t}\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t},\n\t\t\t\t    handleDefault = function handleDefault(heads) {\n\t\t\t\t\t$.each(heads, function (idx, el) {\n\t\t\t\t\t\tvar $el = $(el);\n\t\t\t\t\t\tif ($el.is(\"[\" + attrs.defaultCol + \"]\")) {\n\t\t\t\t\t\t\tif (!$el.is(\".\" + classes.descend)) {\n\t\t\t\t\t\t\t\t$el.addClass(classes.ascend);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t    addSwitcher = function addSwitcher(heads) {\n\t\t\t\t\t$switcher = $('<div>').addClass(classes.switcher).addClass(classes.tableToolbar);\n\n\t\t\t\t\tvar html = ['<label>' + Tablesaw.i18n.sort + ':'];\n\n\t\t\t\t\thtml.push('<span class=\"btn\"><select>');\n\t\t\t\t\theads.each(function (j) {\n\t\t\t\t\t\tvar $t = $(this);\n\t\t\t\t\t\tvar isDefaultCol = $t.is(\"[\" + attrs.defaultCol + \"]\");\n\t\t\t\t\t\tvar isDescending = $t.is(\".\" + classes.descend);\n\n\t\t\t\t\t\tvar hasNumericAttribute = $t.is('[' + attrs.numericCol + ']');\n\t\t\t\t\t\tvar numericCount = 0;\n\t\t\t\t\t\t// Check only the first four rows to see if the column is numbers.\n\t\t\t\t\t\tvar numericCountMax = 5;\n\t\t\t\t\t\t$(this.cells.slice(0, numericCountMax)).each(function () {\n\t\t\t\t\t\t\tif (!isNaN(parseInt(getSortValue(this), 10))) {\n\t\t\t\t\t\t\t\tnumericCount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar isNumeric = numericCount === numericCountMax;\n\t\t\t\t\t\tif (!hasNumericAttribute) {\n\t\t\t\t\t\t\t$t.attr(attrs.numericCol, isNumeric ? \"\" : \"false\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thtml.push('<option' + (isDefaultCol && !isDescending ? ' selected' : '') + ' value=\"' + j + '_asc\">' + $t.text() + ' ' + (isNumeric ? '&#x2191;' : '(A-Z)') + '</option>');\n\t\t\t\t\t\thtml.push('<option' + (isDefaultCol && isDescending ? ' selected' : '') + ' value=\"' + j + '_desc\">' + $t.text() + ' ' + (isNumeric ? '&#x2193;' : '(Z-A)') + '</option>');\n\t\t\t\t\t});\n\t\t\t\t\thtml.push('</select></span></label>');\n\n\t\t\t\t\t$switcher.html(html.join(''));\n\n\t\t\t\t\tvar $toolbar = el.prev().filter('.tablesaw-bar'),\n\t\t\t\t\t    $firstChild = $toolbar.children().eq(0);\n\n\t\t\t\t\tif ($firstChild.length) {\n\t\t\t\t\t\t$switcher.insertBefore($firstChild);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$switcher.appendTo($toolbar);\n\t\t\t\t\t}\n\t\t\t\t\t$switcher.find('.btn').tablesawbtn();\n\t\t\t\t\t$switcher.find('select').on('change', function () {\n\t\t\t\t\t\tvar val = $(this).val().split('_'),\n\t\t\t\t\t\t    head = heads.eq(val[0]);\n\n\t\t\t\t\t\tclearOthers(head.siblings());\n\t\t\t\t\t\tel[pluginName]('sortBy', head.get(0), val[1] === 'asc');\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tel.addClass(pluginName);\n\n\t\t\t\theads = el.children().filter(\"thead\").find(\"th[data-\" + pluginName + \"-col]\");\n\n\t\t\t\taddClassToHeads(heads);\n\t\t\t\tmakeHeadsActionable(heads, headsOnAction);\n\t\t\t\thandleDefault(heads);\n\n\t\t\t\tif (el.is(sortableSwitchSelector)) {\n\t\t\t\t\taddSwitcher(heads);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortRows: function sortRows(rows, colNum, ascending, col) {\n\t\t\t\tvar cells, fn, sorted;\n\t\t\t\tvar convertCells = function convertCells(cellArr) {\n\t\t\t\t\tvar cells = [];\n\t\t\t\t\t$.each(cellArr, function (i, cell) {\n\t\t\t\t\t\tvar row = cell.parentNode;\n\t\t\t\t\t\tvar subrow = $(row).next().filter(\"[\" + attrs.subRow + \"]\");\n\n\t\t\t\t\t\tif ($(row).is(\"[\" + attrs.subRow + \"]\")) {} else {\n\t\t\t\t\t\t\tcells.push({\n\t\t\t\t\t\t\t\telement: cell,\n\t\t\t\t\t\t\t\tcell: getSortValue(cell),\n\t\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\t\tsubrow: subrow.length ? subrow[0] : null\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn cells;\n\t\t\t\t},\n\t\t\t\t    getSortFxn = function getSortFxn(ascending, forceNumeric) {\n\t\t\t\t\tvar fn,\n\t\t\t\t\t    regex = /[^\\-\\+\\d\\.]/g;\n\t\t\t\t\tif (ascending) {\n\t\t\t\t\t\tfn = function fn(a, b) {\n\t\t\t\t\t\t\tif (forceNumeric) {\n\t\t\t\t\t\t\t\treturn parseFloat(a.cell.replace(regex, '')) - parseFloat(b.cell.replace(regex, ''));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn a.cell.toLowerCase() > b.cell.toLowerCase() ? 1 : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfn = function fn(a, b) {\n\t\t\t\t\t\t\tif (forceNumeric) {\n\t\t\t\t\t\t\t\treturn parseFloat(b.cell.replace(regex, '')) - parseFloat(a.cell.replace(regex, ''));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn a.cell.toLowerCase() < b.cell.toLowerCase() ? 1 : -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn fn;\n\t\t\t\t},\n\t\t\t\t    convertCellsToRows = function convertCellsToRows(sorted) {\n\t\t\t\t\tvar newRows = [],\n\t\t\t\t\t    i,\n\t\t\t\t\t    l;\n\t\t\t\t\tfor (i = 0, l = sorted.length; i < l; i++) {\n\t\t\t\t\t\tnewRows.push(sorted[i].row);\n\t\t\t\t\t\tif (sorted[i].subrow) {\n\t\t\t\t\t\t\tnewRows.push(sorted[i].subrow);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn newRows;\n\t\t\t\t};\n\n\t\t\t\tcells = convertCells(col.cells);\n\n\t\t\t\tvar customFn = $(col).data('tablesaw-sort');\n\n\t\t\t\tfn = (customFn && typeof customFn === \"function\" ? customFn(ascending) : false) || getSortFxn(ascending, $(col).is('[' + attrs.numericCol + ']') && !$(col).is('[' + attrs.numericCol + '=\"false\"]'));\n\n\t\t\t\tsorted = cells.sort(fn);\n\n\t\t\t\trows = convertCellsToRows(sorted, rows);\n\n\t\t\t\treturn rows;\n\t\t\t},\n\t\t\tmakeColDefault: function makeColDefault(col, a) {\n\t\t\t\tvar c = $(col);\n\t\t\t\tc.attr(attrs.defaultCol, \"true\");\n\t\t\t\tif (a) {\n\t\t\t\t\tc.removeClass(classes.descend);\n\t\t\t\t\tc.addClass(classes.ascend);\n\t\t\t\t} else {\n\t\t\t\t\tc.removeClass(classes.ascend);\n\t\t\t\t\tc.addClass(classes.descend);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortBy: function sortBy(col, ascending) {\n\t\t\t\tvar el = $(this);\n\t\t\t\tvar colNum;\n\t\t\t\tvar tbl = el.data(\"tablesaw\");\n\t\t\t\tvar rows = tbl.getBodyRows();\n\t\t\t\tvar sortedRows;\n\t\t\t\tvar map = tbl.headerMapping[0];\n\t\t\t\tvar j, k;\n\n\t\t\t\tfor (j = 0, k = map.length; j < k; j++) {\n\t\t\t\t\tif (map[j] === col) {\n\t\t\t\t\t\tcolNum = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsortedRows = el[pluginName](\"sortRows\", rows, colNum, ascending, col);\n\n\t\t\t\t// replace Table rows\n\t\t\t\tfor (j = 0, k = sortedRows.length; j < k; j++) {\n\t\t\t\t\ttbl.$tbody.append(sortedRows[j]);\n\t\t\t\t}\n\n\t\t\t\tel[pluginName](\"makeColDefault\", col, ascending);\n\n\t\t\t\tel.trigger(\"tablesaw-sorted\");\n\t\t\t}\n\t\t};\n\n\t\t// Collection method.\n\t\t$.fn[pluginName] = function (arrg) {\n\t\t\tvar args = Array.prototype.slice.call(arguments, 1),\n\t\t\t    returnVal;\n\n\t\t\t// if it's a method\n\t\t\tif (arrg && typeof arrg === \"string\") {\n\t\t\t\treturnVal = $.fn[pluginName].prototype[arrg].apply(this[0], args);\n\t\t\t\treturn typeof returnVal !== \"undefined\" ? returnVal : $(this);\n\t\t\t}\n\t\t\t// check init\n\t\t\tif (!$(this).data(pluginName + \"-active\")) {\n\t\t\t\t$(this).data(pluginName + \"-active\", true);\n\t\t\t\t$.fn[pluginName].prototype._create.call(this, arrg);\n\t\t\t}\n\t\t\treturn $(this);\n\t\t};\n\t\t// add methods\n\t\t$.extend($.fn[pluginName].prototype, methods);\n\n\t\t$(document).on(Tablesaw.events.create, function (e, Tablesaw) {\n\t\t\tif (Tablesaw.$table.is(initSelector)) {\n\t\t\t\tTablesaw.$table[pluginName]();\n\t\t\t}\n\t\t});\n\t})();\n\n\t(function () {\n\n\t\tvar classes = {\n\t\t\t// TODO duplicate class, also in tables.js\n\t\t\ttoolbar: \"tablesaw-bar\",\n\t\t\thideBtn: \"disabled\",\n\t\t\tpersistWidths: \"tablesaw-fix-persist\",\n\t\t\tallColumnsVisible: 'tablesaw-all-cols-visible'\n\t\t};\n\t\tvar attrs = {\n\t\t\tdisableTouchEvents: \"data-tablesaw-no-touch\"\n\t\t};\n\n\t\tfunction createSwipeTable(tbl, $table) {\n\t\t\tvar $btns = $(\"<div class='tablesaw-advance'></div>\");\n\t\t\tvar $prevBtn = $(\"<a href='#' class='tablesaw-nav-btn btn btn-micro left' title='Previous Column'></a>\").appendTo($btns);\n\t\t\tvar $nextBtn = $(\"<a href='#' class='tablesaw-nav-btn btn btn-micro right' title='Next Column'></a>\").appendTo($btns);\n\n\t\t\tvar $headerCells = tbl._getPrimaryHeaderCells();\n\t\t\tvar $headerCellsNoPersist = $headerCells.not('[data-tablesaw-priority=\"persist\"]');\n\t\t\tvar headerWidths = [];\n\t\t\tvar $head = $(document.head || 'head');\n\t\t\tvar tableId = $table.attr('id');\n\n\t\t\tif (!$headerCells.length) {\n\t\t\t\tthrow new Error(\"tablesaw swipe: no header cells found. Are you using <th> inside of <thead>?\");\n\t\t\t}\n\n\t\t\t$table.addClass(\"tablesaw-swipe\");\n\n\t\t\t// Calculate initial widths\n\t\t\t$headerCells.each(function () {\n\t\t\t\tvar width = this.offsetWidth;\n\t\t\t\theaderWidths.push(width);\n\t\t\t});\n\n\t\t\t$btns.appendTo($table.prev().filter('.tablesaw-bar'));\n\n\t\t\tif (!tableId) {\n\t\t\t\ttableId = 'tableswipe-' + Math.round(Math.random() * 10000);\n\t\t\t\t$table.attr('id', tableId);\n\t\t\t}\n\n\t\t\tfunction $getCells(headerCell) {\n\t\t\t\treturn $(headerCell.cells).add(headerCell);\n\t\t\t}\n\n\t\t\tfunction showColumn(headerCell) {\n\t\t\t\t$getCells(headerCell).removeClass('tablesaw-cell-hidden');\n\t\t\t}\n\n\t\t\tfunction hideColumn(headerCell) {\n\t\t\t\t$getCells(headerCell).addClass('tablesaw-cell-hidden');\n\t\t\t}\n\n\t\t\tfunction persistColumn(headerCell) {\n\t\t\t\t$getCells(headerCell).addClass('tablesaw-cell-persist');\n\t\t\t}\n\n\t\t\tfunction isPersistent(headerCell) {\n\t\t\t\treturn $(headerCell).is('[data-tablesaw-priority=\"persist\"]');\n\t\t\t}\n\n\t\t\tfunction unmaintainWidths() {\n\t\t\t\t$table.removeClass(classes.persistWidths);\n\t\t\t\t$('#' + tableId + '-persist').remove();\n\t\t\t}\n\n\t\t\tfunction maintainWidths() {\n\t\t\t\tvar prefix = '#' + tableId + '.tablesaw-swipe ',\n\t\t\t\t    styles = [],\n\t\t\t\t    tableWidth = $table.width(),\n\t\t\t\t    hash = [],\n\t\t\t\t    newHash;\n\n\t\t\t\t// save persistent column widths (as long as they take up less than 75% of table width)\n\t\t\t\t$headerCells.each(function (index) {\n\t\t\t\t\tvar width;\n\t\t\t\t\tif (isPersistent(this)) {\n\t\t\t\t\t\twidth = this.offsetWidth;\n\n\t\t\t\t\t\tif (width < tableWidth * 0.75) {\n\t\t\t\t\t\t\thash.push(index + '-' + width);\n\t\t\t\t\t\t\tstyles.push(prefix + ' .tablesaw-cell-persist:nth-child(' + (index + 1) + ') { width: ' + width + 'px; }');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tnewHash = hash.join('_');\n\n\t\t\t\tif (styles.length) {\n\t\t\t\t\t$table.addClass(classes.persistWidths);\n\t\t\t\t\tvar $style = $('#' + tableId + '-persist');\n\t\t\t\t\t// If style element not yet added OR if the widths have changed\n\t\t\t\t\tif (!$style.length || $style.data('tablesaw-hash') !== newHash) {\n\t\t\t\t\t\t// Remove existing\n\t\t\t\t\t\t$style.remove();\n\n\t\t\t\t\t\t$('<style>' + styles.join(\"\\n\") + '</style>').attr('id', tableId + '-persist').data('tablesaw-hash', newHash).appendTo($head);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getNext() {\n\t\t\t\tvar next = [],\n\t\t\t\t    checkFound;\n\n\t\t\t\t$headerCellsNoPersist.each(function (i) {\n\t\t\t\t\tvar $t = $(this),\n\t\t\t\t\t    isHidden = $t.css(\"display\") === \"none\" || $t.is(\".tablesaw-cell-hidden\");\n\n\t\t\t\t\tif (!isHidden && !checkFound) {\n\t\t\t\t\t\tcheckFound = true;\n\t\t\t\t\t\tnext[0] = i;\n\t\t\t\t\t} else if (isHidden && checkFound) {\n\t\t\t\t\t\tnext[1] = i;\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn next;\n\t\t\t}\n\n\t\t\tfunction getPrev() {\n\t\t\t\tvar next = getNext();\n\t\t\t\treturn [next[1] - 1, next[0] - 1];\n\t\t\t}\n\n\t\t\tfunction nextpair(fwd) {\n\t\t\t\treturn fwd ? getNext() : getPrev();\n\t\t\t}\n\n\t\t\tfunction canAdvance(pair) {\n\t\t\t\treturn pair[1] > -1 && pair[1] < $headerCellsNoPersist.length;\n\t\t\t}\n\n\t\t\tfunction matchesMedia() {\n\t\t\t\tvar matchMedia = $table.attr(\"data-tablesaw-swipe-media\");\n\t\t\t\treturn !matchMedia || \"matchMedia\" in win && win.matchMedia(matchMedia).matches;\n\t\t\t}\n\n\t\t\tfunction fakeBreakpoints() {\n\t\t\t\tif (!matchesMedia()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar containerWidth = $table.parent().width(),\n\t\t\t\t    persist = [],\n\t\t\t\t    sum = 0,\n\t\t\t\t    sums = [],\n\t\t\t\t    visibleNonPersistantCount = $headerCells.length;\n\n\t\t\t\t$headerCells.each(function (index) {\n\t\t\t\t\tvar $t = $(this),\n\t\t\t\t\t    isPersist = $t.is('[data-tablesaw-priority=\"persist\"]');\n\n\t\t\t\t\tpersist.push(isPersist);\n\t\t\t\t\tsum += headerWidths[index];\n\t\t\t\t\tsums.push(sum);\n\n\t\t\t\t\t// is persistent or is hidden\n\t\t\t\t\tif (isPersist || sum > containerWidth) {\n\t\t\t\t\t\tvisibleNonPersistantCount--;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// We need at least one column to swipe.\n\t\t\t\tvar needsNonPersistentColumn = visibleNonPersistantCount === 0;\n\n\t\t\t\t$headerCells.each(function (index) {\n\t\t\t\t\tif (persist[index]) {\n\n\t\t\t\t\t\t// for visual box-shadow\n\t\t\t\t\t\tpersistColumn(this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sums[index] <= containerWidth || needsNonPersistentColumn) {\n\t\t\t\t\t\tneedsNonPersistentColumn = false;\n\t\t\t\t\t\tshowColumn(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thideColumn(this);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tunmaintainWidths();\n\t\t\t\t$table.trigger('tablesawcolumns');\n\t\t\t}\n\n\t\t\tfunction advance(fwd) {\n\t\t\t\tvar pair = nextpair(fwd);\n\t\t\t\tif (canAdvance(pair)) {\n\t\t\t\t\tif (isNaN(pair[0])) {\n\t\t\t\t\t\tif (fwd) {\n\t\t\t\t\t\t\tpair[0] = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpair[0] = $headerCellsNoPersist.length - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmaintainWidths();\n\n\t\t\t\t\thideColumn($headerCellsNoPersist.get(pair[0]));\n\t\t\t\t\tshowColumn($headerCellsNoPersist.get(pair[1]));\n\n\t\t\t\t\t$table.trigger('tablesawcolumns');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$prevBtn.add($nextBtn).on(\"click\", function (e) {\n\t\t\t\tadvance(!!$(e.target).closest($nextBtn).length);\n\t\t\t\te.preventDefault();\n\t\t\t});\n\n\t\t\tfunction getCoord(event, key) {\n\t\t\t\treturn (event.touches || event.originalEvent.touches)[0][key];\n\t\t\t}\n\n\t\t\tif (!$table.is(\"[\" + attrs.disableTouchEvents + \"]\")) {\n\n\t\t\t\t$table.on(\"touchstart.swipetoggle\", function (e) {\n\t\t\t\t\tvar originX = getCoord(e, 'pageX');\n\t\t\t\t\tvar originY = getCoord(e, 'pageY');\n\t\t\t\t\tvar x;\n\t\t\t\t\tvar y;\n\t\t\t\t\tvar scrollTop = window.pageYOffset;\n\n\t\t\t\t\t$(win).off(Tablesaw.events.resize, fakeBreakpoints);\n\n\t\t\t\t\t$(this).on(\"touchmove.swipetoggle\", function (e) {\n\t\t\t\t\t\tx = getCoord(e, 'pageX');\n\t\t\t\t\t\ty = getCoord(e, 'pageY');\n\t\t\t\t\t}).on(\"touchend.swipetoggle\", function () {\n\t\t\t\t\t\tvar cfg = tbl.getConfig({\n\t\t\t\t\t\t\tswipeHorizontalThreshold: 30,\n\t\t\t\t\t\t\tswipeVerticalThreshold: 30\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// This config code is a little awkward because shoestring doesn’t support deep $.extend\n\t\t\t\t\t\t// Trying to work around when devs only override one of (not both) horizontalThreshold or\n\t\t\t\t\t\t// verticalThreshold in their TablesawConfig.\n\t\t\t\t\t\tvar verticalThreshold = cfg.swipe ? cfg.swipe.verticalThreshold : cfg.swipeVerticalThreshold;\n\t\t\t\t\t\tvar horizontalThreshold = cfg.swipe ? cfg.swipe.horizontalThreshold : cfg.swipeHorizontalThreshold;\n\n\t\t\t\t\t\tvar isPageScrolled = Math.abs(window.pageYOffset - scrollTop) >= verticalThreshold;\n\t\t\t\t\t\tvar isVerticalSwipe = Math.abs(y - originY) >= verticalThreshold;\n\n\t\t\t\t\t\tif (!isVerticalSwipe && !isPageScrolled) {\n\t\t\t\t\t\t\tif (x - originX < -1 * horizontalThreshold) {\n\t\t\t\t\t\t\t\tadvance(true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (x - originX > horizontalThreshold) {\n\t\t\t\t\t\t\t\tadvance(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\t$(win).on(Tablesaw.events.resize, fakeBreakpoints);\n\t\t\t\t\t\t}, 300);\n\n\t\t\t\t\t\t$(this).off(\"touchmove.swipetoggle touchend.swipetoggle\");\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$table.on(\"tablesawcolumns.swipetoggle\", function () {\n\t\t\t\tvar canGoPrev = canAdvance(getPrev());\n\t\t\t\tvar canGoNext = canAdvance(getNext());\n\t\t\t\t$prevBtn[canGoPrev ? \"removeClass\" : \"addClass\"](classes.hideBtn);\n\t\t\t\t$nextBtn[canGoNext ? \"removeClass\" : \"addClass\"](classes.hideBtn);\n\n\t\t\t\t$prevBtn.closest(\".\" + classes.toolbar)[!canGoPrev && !canGoNext ? 'addClass' : 'removeClass'](classes.allColumnsVisible);\n\t\t\t}).on(\"tablesawnext.swipetoggle\", function () {\n\t\t\t\tadvance(true);\n\t\t\t}).on(\"tablesawprev.swipetoggle\", function () {\n\t\t\t\tadvance(false);\n\t\t\t}).on(Tablesaw.events.destroy + \".swipetoggle\", function () {\n\t\t\t\tvar $t = $(this);\n\n\t\t\t\t$t.removeClass('tablesaw-swipe');\n\t\t\t\t$t.prev().filter('.tablesaw-bar').find('.tablesaw-advance').remove();\n\t\t\t\t$(win).off(Tablesaw.events.resize, fakeBreakpoints);\n\n\t\t\t\t$t.off(\".swipetoggle\");\n\t\t\t}).on(Tablesaw.events.refresh, function () {\n\t\t\t\t// manual refresh\n\t\t\t\theaderWidths = [];\n\t\t\t\t$headerCells.each(function () {\n\t\t\t\t\tvar width = this.offsetWidth;\n\t\t\t\t\theaderWidths.push(width);\n\t\t\t\t});\n\n\t\t\t\tfakeBreakpoints();\n\t\t\t});\n\n\t\t\tfakeBreakpoints();\n\t\t\t$(win).on(Tablesaw.events.resize, fakeBreakpoints);\n\t\t}\n\n\t\t// on tablecreate, init\n\t\t$(document).on(Tablesaw.events.create, function (e, tablesaw) {\n\t\t\tif (tablesaw.mode === 'swipe') {\n\t\t\t\tcreateSwipeTable(tablesaw, tablesaw.$table);\n\t\t\t}\n\t\t});\n\t})();\n\n\t;(function () {\n\n\t\tvar MiniMap = {\n\t\t\tattr: {\n\t\t\t\tinit: 'data-tablesaw-minimap'\n\t\t\t}\n\t\t};\n\n\t\tfunction createMiniMap($table) {\n\n\t\t\tvar $btns = $('<div class=\"tablesaw-advance minimap\">'),\n\t\t\t    $dotNav = $('<ul class=\"tablesaw-advance-dots\">').appendTo($btns),\n\t\t\t    hideDot = 'tablesaw-advance-dots-hide',\n\t\t\t    $headerCells = $table.find('thead th');\n\n\t\t\t// populate dots\n\t\t\t$headerCells.each(function () {\n\t\t\t\t$dotNav.append('<li><i></i></li>');\n\t\t\t});\n\n\t\t\t$btns.appendTo($table.prev().filter('.tablesaw-bar'));\n\n\t\t\tfunction showMinimap($table) {\n\t\t\t\tvar mq = $table.attr(MiniMap.attr.init);\n\t\t\t\treturn !mq || win.matchMedia && win.matchMedia(mq).matches;\n\t\t\t}\n\n\t\t\tfunction showHideNav() {\n\t\t\t\tif (!showMinimap($table)) {\n\t\t\t\t\t$btns.css(\"display\", \"none\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$btns.css(\"display\", \"block\");\n\n\t\t\t\t// show/hide dots\n\t\t\t\tvar dots = $dotNav.find(\"li\").removeClass(hideDot);\n\t\t\t\t$table.find(\"thead th\").each(function (i) {\n\t\t\t\t\tif ($(this).css(\"display\") === \"none\") {\n\t\t\t\t\t\tdots.eq(i).addClass(hideDot);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// run on init and resize\n\t\t\tshowHideNav();\n\t\t\t$(win).on(Tablesaw.events.resize, showHideNav);\n\n\t\t\t$table.on(\"tablesawcolumns.minimap\", function () {\n\t\t\t\tshowHideNav();\n\t\t\t}).on(Tablesaw.events.destroy + \".minimap\", function () {\n\t\t\t\tvar $t = $(this);\n\n\t\t\t\t$t.prev().filter('.tablesaw-bar').find('.tablesaw-advance').remove();\n\t\t\t\t$(win).off(Tablesaw.events.resize, showHideNav);\n\n\t\t\t\t$t.off(\".minimap\");\n\t\t\t});\n\t\t}\n\n\t\t// on tablecreate, init\n\t\t$(document).on(Tablesaw.events.create, function (e, tablesaw) {\n\n\t\t\tif ((tablesaw.mode === 'swipe' || tablesaw.mode === 'columntoggle') && tablesaw.$table.is('[ ' + MiniMap.attr.init + ']')) {\n\t\t\t\tcreateMiniMap(tablesaw.$table);\n\t\t\t}\n\t\t});\n\t})();\n\n\t;(function () {\n\n\t\tvar S = {\n\t\t\tselectors: {\n\t\t\t\tinit: 'table[data-tablesaw-mode-switch]'\n\t\t\t},\n\t\t\tattributes: {\n\t\t\t\texcludeMode: 'data-tablesaw-mode-exclude'\n\t\t\t},\n\t\t\tclasses: {\n\t\t\t\tmain: 'tablesaw-modeswitch',\n\t\t\t\ttoolbar: 'tablesaw-toolbar'\n\t\t\t},\n\t\t\tmodes: ['stack', 'swipe', 'columntoggle'],\n\t\t\tinit: function init(table) {\n\t\t\t\tvar $table = $(table),\n\t\t\t\t    ignoreMode = $table.attr(S.attributes.excludeMode),\n\t\t\t\t    $toolbar = $table.prev().filter('.tablesaw-bar'),\n\t\t\t\t    modeVal = '',\n\t\t\t\t    $switcher = $('<div>').addClass(S.classes.main + ' ' + S.classes.toolbar);\n\n\t\t\t\tvar html = ['<label>' + Tablesaw.i18n.columns + ':'],\n\t\t\t\t    dataMode = $table.attr('data-tablesaw-mode'),\n\t\t\t\t    isSelected;\n\n\t\t\t\thtml.push('<span class=\"btn\"><select>');\n\t\t\t\tfor (var j = 0, k = S.modes.length; j < k; j++) {\n\t\t\t\t\tif (ignoreMode && ignoreMode.toLowerCase() === S.modes[j]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tisSelected = dataMode === S.modes[j];\n\n\t\t\t\t\tif (isSelected) {\n\t\t\t\t\t\tmodeVal = S.modes[j];\n\t\t\t\t\t}\n\n\t\t\t\t\thtml.push('<option' + (isSelected ? ' selected' : '') + ' value=\"' + S.modes[j] + '\">' + Tablesaw.i18n.modes[j] + '</option>');\n\t\t\t\t}\n\t\t\t\thtml.push('</select></span></label>');\n\n\t\t\t\t$switcher.html(html.join(''));\n\n\t\t\t\tvar $otherToolbarItems = $toolbar.find('.tablesaw-advance').eq(0);\n\t\t\t\tif ($otherToolbarItems.length) {\n\t\t\t\t\t$switcher.insertBefore($otherToolbarItems);\n\t\t\t\t} else {\n\t\t\t\t\t$switcher.appendTo($toolbar);\n\t\t\t\t}\n\n\t\t\t\t$switcher.find('.btn').tablesawbtn();\n\t\t\t\t$switcher.find('select').on('change', S.onModeChange);\n\t\t\t},\n\t\t\tonModeChange: function onModeChange() {\n\t\t\t\tvar $t = $(this),\n\t\t\t\t    $switcher = $t.closest('.' + S.classes.main),\n\t\t\t\t    $table = $t.closest('.tablesaw-bar').next().eq(0),\n\t\t\t\t    val = $t.val();\n\n\t\t\t\t$switcher.remove();\n\t\t\t\t$table.data('tablesaw').destroy();\n\n\t\t\t\t$table.attr('data-tablesaw-mode', val);\n\t\t\t\t$table.tablesaw();\n\t\t\t}\n\t\t};\n\n\t\t$(win.document).on(Tablesaw.events.create, function (e, Tablesaw) {\n\t\t\tif (Tablesaw.$table.is(S.selectors.init)) {\n\t\t\t\tS.init(Tablesaw.table);\n\t\t\t}\n\t\t});\n\t})();\n\t(function () {\n\t\tvar pluginName = \"tablesawCheckAll\";\n\n\t\tfunction CheckAll(tablesaw) {\n\t\t\tthis.tablesaw = tablesaw;\n\t\t\tthis.$table = tablesaw.$table;\n\t\t\tthis.checkboxAllSelector = \"input[type=\\\"checkbox\\\"][data-tablesaw-checkall]\";\n\t\t\tthis.checkboxSelector = \"input[type=\\\"checkbox\\\"]\";\n\n\t\t\tthis.$checkbox = null;\n\n\t\t\tif (this.$table.data(pluginName)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.$table.data(pluginName, this);\n\t\t\tthis.init();\n\t\t}\n\n\t\tCheckAll.prototype.init = function () {\n\t\t\tthis.$checkbox = this.$table.find(\"thead\").find(this.checkboxAllSelector);\n\n\t\t\tif (this.$checkbox.length) {\n\t\t\t\tthis.addEvents();\n\t\t\t}\n\t\t};\n\n\t\tCheckAll.prototype.addEvents = function () {\n\t\t\tvar self = this;\n\t\t\t// Update body checkboxes when header checkbox is changed\n\t\t\tthis.$checkbox.on(\"change\", function () {\n\t\t\t\tvar setChecked = this.checked;\n\t\t\t\tvar $th = $(this).closest(\"th\");\n\t\t\t\tif ($th.length) {\n\t\t\t\t\t$($th[0].cells).find(self.checkboxSelector).each(function () {\n\t\t\t\t\t\tthis.checked = setChecked;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Update header checkbox when body checkboxes are changed\n\t\t\tthis.$table.find(\"tbody \" + this.checkboxSelector).on(\"change\", function () {\n\t\t\t\tvar cells;\n\t\t\t\tvar checkedCount = 0;\n\n\t\t\t\tvar $td = $(this).closest(\"th,td\");\n\t\t\t\tif ($td.length) {\n\t\t\t\t\tcells = $td[0].headerCell.cells;\n\n\t\t\t\t\t$(cells).find(self.checkboxSelector).not(self.checkboxAllSelector).each(function () {\n\t\t\t\t\t\tif (this.checked) {\n\t\t\t\t\t\t\tcheckedCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$($td[0].headerCell).find(self.checkboxSelector).each(function () {\n\t\t\t\t\t\tvar allSelected = checkedCount === cells.length;\n\t\t\t\t\t\tthis.checked = allSelected;\n\n\t\t\t\t\t\t// only indeterminate if some are selected (not all and not none)\n\t\t\t\t\t\tthis.indeterminate = checkedCount !== 0 && !allSelected;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// on tablecreate, init\n\t\t$(document).on(Tablesaw.events.create, function (e, tablesaw) {\n\t\t\tnew CheckAll(tablesaw);\n\t\t});\n\t})();\n});"],"sourceRoot":"/source/"}